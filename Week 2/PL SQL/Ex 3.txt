
-- Scenario 1: The bank needs to process monthly interest for all savings accounts.
CREATE OR REPLACE PROCEDURE ProcessMonthlyInterest IS
BEGIN
    UPDATE Accounts
    SET Balance = Balance * 1.01
    WHERE AccountType = 'Savings';

    COMMIT;
END;
/
-- Test Procedure
BEGIN
    ProcessMonthlyInterest;
END;
/

--------------------------------------------------------------------------------

-- Scenario 2: Bonus for employees based on department
CREATE OR REPLACE PROCEDURE UpdateEmployeeBonus (
    dept_name IN VARCHAR2,
    bonus_pct IN NUMBER
) IS
BEGIN
    UPDATE Employees
    SET Salary = Salary + (Salary * bonus_pct / 100)
    WHERE Department = dept_name;

    COMMIT;
END;
/
-- Test Procedure
BEGIN
    UpdateEmployeeBonus('IT', 10); -- 10% bonus for IT dept
END;
/

--------------------------------------------------------------------------------

-- Scenario 3: Transfer funds between accounts with balance check
CREATE OR REPLACE PROCEDURE TransferFunds (
    fromAccID IN NUMBER,
    toAccID IN NUMBER,
    amount IN NUMBER
) IS
    from_balance NUMBER;
    insufficient_balance EXCEPTION;
BEGIN
    -- Get balance of source account
    SELECT Balance INTO from_balance
    FROM Accounts
    WHERE AccountID = fromAccID
    FOR UPDATE;

    -- Check balance
    IF from_balance < amount THEN
        RAISE insufficient_balance;
    END IF;

    -- Deduct from source account
    UPDATE Accounts
    SET Balance = Balance - amount
    WHERE AccountID = fromAccID;

    -- Add to destination account
    UPDATE Accounts
    SET Balance = Balance + amount
    WHERE AccountID = toAccID;

    COMMIT;

EXCEPTION
    WHEN insufficient_balance THEN
        ROLLBACK;
        DBMS_OUTPUT.PUT_LINE('Error: Insufficient funds in source account.');
    WHEN NO_DATA_FOUND THEN
        ROLLBACK;
        DBMS_OUTPUT.PUT_LINE('Error: Account not found.');
    WHEN OTHERS THEN
        ROLLBACK;
        DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
END;
/
-- Test Procedure
BEGIN
    TransferFunds(1, 2, 2000); -- Transfer â‚¹2000 from Account 1 to Account 2
END;
/
